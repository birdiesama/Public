import pymel.core as pm

en = True

selection_list = pm.ls(sl = True)

hairSys_list = pm.listRelatives(selection_list, ad = True, type = 'hairSystem')

for hairSys in hairSys_list:
    if en:
        hairSys.simulationMethod.set(3)
        hairSys.active.set(1)
    else:
        hairSys.simulationMethod.set(0)
        hairSys.active.set(0)
        
############################

import pymel.core as pm

def nCon_grp():
    selection_list = pm.ls(sl = True)
    softMod_list = pm.listRelatives(selection_list, type = 'dynamicConstraint', ad = True)
    softMod_list = pm.listRelatives(softMod_list, parent = True)
    softMod_list = list(set(softMod_list))

    group = pm.group(em = True, w = True)
    frame = pm.currentTime(query = True)
    frame = int(frame)
    group.rename('softMod_f{0}_1'.format(frame))
    pm.addAttr(group, ln = 'enable', at = 'double', min = 0, max = 2, dv = 1, keyable = True)
    for attr in ('t', 'r', 's'):
        for axis in ('x', 'y', 'z'):
            pm.setAttr('{0}.{1}{2}'.format(group.nodeName(), attr, axis), lock = True, keyable = False, channelBox = False)

    pm.parent(selection_list, group)
    
    for softMod in softMod_list:
        group.enable >> softMod.enable

nCon_grp()
